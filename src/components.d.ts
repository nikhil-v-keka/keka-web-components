/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface KekaSlider {
        "displayValues": boolean;
        "left": number;
        "maxValue": number;
        "minGap": number;
        "minValue": number;
        "right": number;
        "tooltip": boolean;
    }
    interface KekaToggle {
        "bordered": boolean;
        "disabled": boolean;
        "isActive": boolean;
        "label": string;
        "size": string;
        "text": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
export interface KekaSliderCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLKekaSliderElement;
}
export interface KekaToggleCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLKekaToggleElement;
}
declare global {
    interface HTMLKekaSliderElement extends Components.KekaSlider, HTMLStencilElement {
    }
    var HTMLKekaSliderElement: {
        prototype: HTMLKekaSliderElement;
        new (): HTMLKekaSliderElement;
    };
    interface HTMLKekaToggleElement extends Components.KekaToggle, HTMLStencilElement {
    }
    var HTMLKekaToggleElement: {
        prototype: HTMLKekaToggleElement;
        new (): HTMLKekaToggleElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "keka-slider": HTMLKekaSliderElement;
        "keka-toggle": HTMLKekaToggleElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface KekaSlider {
        "displayValues"?: boolean;
        "left"?: number;
        "maxValue"?: number;
        "minGap"?: number;
        "minValue"?: number;
        "onRangeChanged"?: (event: KekaSliderCustomEvent<number[]>) => void;
        "right"?: number;
        "tooltip"?: boolean;
    }
    interface KekaToggle {
        "bordered"?: boolean;
        "disabled"?: boolean;
        "isActive"?: boolean;
        "label"?: string;
        "onToggleInput"?: (event: KekaToggleCustomEvent<boolean>) => void;
        "size"?: string;
        "text"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "keka-slider": KekaSlider;
        "keka-toggle": KekaToggle;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "keka-slider": LocalJSX.KekaSlider & JSXBase.HTMLAttributes<HTMLKekaSliderElement>;
            "keka-toggle": LocalJSX.KekaToggle & JSXBase.HTMLAttributes<HTMLKekaToggleElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
